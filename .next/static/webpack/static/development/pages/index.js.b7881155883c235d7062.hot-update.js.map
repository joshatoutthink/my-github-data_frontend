{"version":3,"file":"static/webpack/static/development/pages/index.js.b7881155883c235d7062.hot-update.js","sources":["webpack:///./components/BarGraph.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport maxValue from \"../helperFunctions/maxValue\";\nimport Bar from \"../graphComponents/Bar\";\n\nconst BarGraph = ({ className, data }) => {\n  const viewBox = {\n    w: 400,\n    h: 200,\n  };\n  const { w, h } = viewBox;\n\n  const barMax = maxValue(dataset);\n  const barHeight = Math.floor(h / (dataset.length - 1) - h / 100 - w / 100);\n\n  return (\n    <svg viewBox={`0 0 ${w} ${h}`} className={className}>\n      <g className='grid grid-x'>\n        <line x1='0' x2={w} y1={h} y2={h} />\n      </g>\n      <g className='grid grid-y'>\n        <line x1='0' x2='0' y1='0' y2={h} />\n      </g>\n\n      {dataset.map((data, index) => {\n        const barWidth = Math.floor((data / barMax) * w);\n\n        const barY = Math.floor((h / dataset.length) * index);\n        //const text = { tX, tY, dY, repoTitle };\n        const rect = { barHeight, barWidth, barY };\n\n        return (\n          <Bar\n            key={index}\n            className='bar'\n            /* text={text} */ rect={rect}\n            viewBox={viewBox}\n          />\n        );\n      })}\n    </svg>\n  );\n};\n\nexport default styled(BarGraph)`\n  width: 100%;\n  height: auto;\n  background: white;\n  .grid {\n    stroke: black;\n    stroke-width: 3;\n  }\n  .increment-line {\n    stroke: black;\n    stroke-width: 0.2;\n  }\n  .bar {\n    text {\n      fill: white;\n      font-size: 10px;\n    }\n  }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAAA;AAOA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}